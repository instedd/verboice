.tablewrapp.no-wrap.scroll.contacts-table
  %table.GralTable.w-pagination
    %tr
      %th.sort{colspan: 2, data: {"sort-key" => true, "sort-type" => "address"}, class: ((params[:sort_type].try(&:to_s) == 'address') ? params[:sort_dir] || 'up' : nil)}
        Phone numbers
        %span
      %th.sort{data: {"sort-key" => true, "sort-type" => "last_activity"}, class: ((params[:sort_type].try(&:to_s) == 'last_activity') ? params[:sort_dir] || 'up' : nil)}
        Last activity
        %span
      - @implicit_variables.each do |variable|
        %th.sort{data: {"sort-key" => variable.key, "sort-type" => "implicit_key"}, class: ((params[:sort_key] == variable.key) ? params[:sort_dir] || 'up' : nil)}
          =variable.key
          %span
      - @project_variables.each do |variable|
        %th.sort{data: {"sort-key" => variable.id, "sort-type" => "project_variable_id"}, class: ((params[:sort_key] == variable.id.to_s) ? params[:sort_dir] || 'up' : nil)}
          =variable.name
          %span
      - @recorded_audio_descriptions.each do |audio_description|
        %th=audio_description

    - @contacts.each do |contact|
      - link_opts = project_admin? ? {'data-url' => edit_project_contact_path(@project, contact), 'class' => 'link'} : {}
      %tr{link_opts}
        %td= addresses_for_contact(contact)
        %td.right
          - if project_admin?
            = link_to '', project_contact_path(@project, contact), :confirm => 'Are you sure?', :method => :delete, :class => 'button premove'
        %td= raw time_ago contact.last_activity_at
        - @implicit_variables.each do |implicit_variable|
          - variable = contact.persisted_variables.detect{|v| v.implicit_key == implicit_variable.key}
          %td= variable.try(:value)
        - @project_variables.each do |project_variable|
          - variable = contact.persisted_variables.detect do |variable|
            - variable.project_variable_id == project_variable.id
          %td= variable.try(:value)
        - @recorded_audio_descriptions.each do |audio_description|
          - audios = contact.recorded_audios.collect do |audio|
            - audio.description == audio_description
          %td= audios.size

  = paginate @contacts, :param_name => 'page', :remote => true,
      :params => { filters_json: params[:filters_json], sort_key: params[:sort_key], sort_dir: params[:sort_dir], sort_type: params[:sort_type] }
